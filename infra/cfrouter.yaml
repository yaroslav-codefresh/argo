apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-conf
data:
  nginx.conf: |
    user nginx;
    error_log  /var/log/nginx/error.log;
    events {
          worker_connections  10240;
    }
    http {
      log_format  main
              'remote_addr:$remote_addr\t'
              'time_local:$time_local\t'
              'method:$request_method\t'
              'uri:$request_uri\t'
              'host:$host\t'
              'status:$status\t'
              'bytes_sent:$body_bytes_sent\t'
              'referer:$http_referer\t'
              'useragent:$http_user_agent\t'
              'forwardedfor:$http_x_forwarded_for\t'
              'request_time:$request_time';
      access_log	/var/log/nginx/access.log main;
      server {
         listen 80 default_server;

         location /argo-events {
             proxy_pass  http://github-eventsource-svc:12000;
             proxy_http_version 1.1;
             proxy_set_header Upgrade $http_upgrade;
             proxy_set_header Connection 'upgrade';
             proxy_set_header Host $host;

             proxy_cache_bypass $http_upgrade;
         }
      }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cfrouter
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: cfrouter
    spec:
      containers:
        - name: cfrouter
          image: nginx:1.19-alpine
          ports:
            - containerPort: 80
          volumeMounts:
            - mountPath: /etc/nginx # mount nginx-conf volume to /etc/nginx
              readOnly: true
              name: nginx-conf
            - mountPath: /var/log/nginx
              name: log
      volumes:
        - name: nginx-conf
          configMap:
            name: nginx-conf # place ConfigMap `nginx-conf` on /etc/nginx
            items:
              - key: nginx.conf
                path: nginx.conf
        - name: log
          emptyDir: {}
  selector:
    matchLabels:
      app: cfrouter

---
apiVersion: v1
kind: Service
metadata:
  name: cfrouter
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 80
  selector:
    app: cfrouter
